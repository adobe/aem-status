name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
      - feature/incident-classification
    # Prevent workflow from running on automated commits to avoid infinite loops
    paths-ignore:
      - 'incidents/index.json'

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    # Add write permissions for contents to allow committing
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
          lfs: false
          # Use a PAT or GitHub App token to allow the commit to trigger other workflows if needed
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install --no-save
      
      - name: Update incidents index
        run: npm run update-incidents

      - name: Check for unclassified incidents
        id: check_unclassified
        run: |
          UNCLASSIFIED=$(node -e "
          const fs = require('fs');
          const incidents = JSON.parse(fs.readFileSync('incidents/index.json', 'utf-8'));
          const unclassified = incidents.filter(i =>
            !i.affectedComponents ||
            i.externalVendors === undefined ||
            !i.rootCause
          );
          console.log(unclassified.length);
          ")

          echo "count=$UNCLASSIFIED" >> $GITHUB_OUTPUT

          if [ "$UNCLASSIFIED" -gt 0 ]; then
            echo "needs_classification=true" >> $GITHUB_OUTPUT
            echo "Found $UNCLASSIFIED unclassified incidents"
          else
            echo "needs_classification=false" >> $GITHUB_OUTPUT
            echo "All incidents classified âœ“"
          fi

      - name: Commit updated index
        id: commit_index
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add incidents/index.json

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "chore: update incidents index [skip ci]"
            git push origin ${{ github.ref_name }}
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create classification PR
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        run: |
          BRANCH_NAME="auto-classify-$(date +%s)"

          git checkout -b "$BRANCH_NAME"

          # Create marker file
          echo "Waiting for Claude to classify ${{ steps.check_unclassified.outputs.count }} incidents" > .classification-pending
          git add .classification-pending
          git commit -m "chore: trigger incident classification

          Found ${{ steps.check_unclassified.outputs.count }} incidents needing classification."

          git push -u origin "$BRANCH_NAME"

          # Create PR
          gh pr create \
            --title "Classify ${{ steps.check_unclassified.outputs.count }} incidents" \
            --body "**Automated classification request**

          This PR was automatically created because ${{ steps.check_unclassified.outputs.count }} incidents need classification.

          @claude please classify all unclassified incidents in \`incidents/index.json\`.

          ## Instructions:

          Read \`incidents/index.json\` and find incidents missing these fields:
          - \`affectedComponents\`
          - \`externalVendors\`
          - \`rootCause\`

          For each unclassified incident, analyze the \`name\` and \`message\` fields to determine:

          ### 1. affectedComponents (array)
          Choose from: delivery, publishing, admin-api, forms, code-sync, rum, indexing, logging, dns, sidekick, media

          ### 2. externalVendors (array or null)
          Choose from: cloudflare, aws, fastly, github, microsoft, unpkg, zscaler, or null

          ### 3. rootCause (string)
          Choose ONE: third-party-outage, configuration-change, deployment-issue, resource-limits, credential-issue, dns-issue, network-issue, unknown

          After classifying all incidents:
          1. Remove the \`.classification-pending\` file
          2. Commit all changes

          This PR will be auto-merged once classification is complete." \
            --base ${{ github.ref_name }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for classification
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        run: |
          echo "Classification PR created. Waiting for Claude to complete classification..."
          echo "This workflow will resume after the PR is merged."
          exit 1
      
      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          skip_app_build: true # Skip build for static sites

