name: Incident-Classification

on:
  push:
    branches:
      - main
      - feature/incident-classification
    paths:
      - "incidents/index.json"

jobs:
  classify-incidents:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check for unclassified incidents
        id: check_unclassified
        run: |
          # Check if there are incidents missing classification fields
          UNCLASSIFIED=$(node -e "
          const fs = require('fs');
          const incidents = JSON.parse(fs.readFileSync('incidents/index.json', 'utf-8'));
          const unclassified = incidents.filter(i =>
            !i.affectedComponents ||
            i.externalVendors === undefined ||
            !i.rootCause
          );
          console.log(unclassified.length);
          ")

          echo "count=$UNCLASSIFIED" >> $GITHUB_OUTPUT

          if [ "$UNCLASSIFIED" -gt 0 ]; then
            echo "Found $UNCLASSIFIED unclassified incidents"
            echo "needs_classification=true" >> $GITHUB_OUTPUT

            # List unclassified incidents
            node -e "
            const fs = require('fs');
            const incidents = JSON.parse(fs.readFileSync('incidents/index.json', 'utf-8'));
            const unclassified = incidents.filter(i =>
              !i.affectedComponents ||
              i.externalVendors === undefined ||
              !i.rootCause
            );
            console.log('\nUnclassified incidents:');
            unclassified.forEach(i => console.log('  - ' + i.code + ': ' + i.name));
            "
          else
            echo "All incidents are classified"
            echo "needs_classification=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        uses: actions/setup-node@v5
        with:
          node-version: '22'

      - name: Install Anthropic SDK
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        run: npm install @anthropic-ai/sdk

      - name: Classify incidents with Claude
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          node << 'EOF'
          const Anthropic = require('@anthropic-ai/sdk');
          const fs = require('fs');

          const anthropic = new Anthropic({
            apiKey: process.env.ANTHROPIC_API_KEY,
          });

          async function classifyIncidents() {
            const incidents = JSON.parse(fs.readFileSync('incidents/index.json', 'utf-8'));

            const unclassified = incidents.filter(i =>
              !i.affectedComponents ||
              i.externalVendors === undefined ||
              !i.rootCause
            );

            console.log(`Classifying ${unclassified.length} incidents...`);

            const prompt = `You are classifying incident reports. Here are the unclassified incidents:

          ${JSON.stringify(unclassified, null, 2)}

          For each incident, analyze the "name" and "message" fields and add these three classification fields:

          1. affectedComponents (array): Choose from: delivery, publishing, admin-api, forms, code-sync, rum, indexing, logging, dns, sidekick, media

          2. externalVendors (array or null): Choose from: cloudflare, aws, fastly, github, microsoft, unpkg, zscaler, or null if no external vendor

          3. rootCause (string): Choose ONE from: third-party-outage, configuration-change, deployment-issue, resource-limits, credential-issue, dns-issue, network-issue, unknown

          Return ONLY a JSON array with the classifications for each incident in the same order, like:
          [
            {
              "code": "incident-code",
              "affectedComponents": ["delivery"],
              "externalVendors": ["cloudflare"],
              "rootCause": "third-party-outage"
            }
          ]`;

            const message = await anthropic.messages.create({
              model: 'claude-sonnet-4-20250514',
              max_tokens: 4096,
              messages: [{
                role: 'user',
                content: prompt
              }]
            });

            const responseText = message.content[0].text;
            const jsonMatch = responseText.match(/\[[\s\S]*\]/);
            if (!jsonMatch) {
              console.error('Could not extract JSON from response');
              process.exit(1);
            }

            const classifications = JSON.parse(jsonMatch[0]);

            // Merge classifications back into incidents
            classifications.forEach(classification => {
              const incident = incidents.find(i => i.code === classification.code);
              if (incident) {
                incident.affectedComponents = classification.affectedComponents;
                incident.externalVendors = classification.externalVendors;
                incident.rootCause = classification.rootCause;
                console.log(`âœ“ Classified ${classification.code}`);
              }
            });

            fs.writeFileSync('incidents/index.json', JSON.stringify(incidents, null, 2) + '\n');
            console.log(`\nSuccessfully classified ${classifications.length} incidents`);
          }

          classifyIncidents().catch(err => {
            console.error('Error:', err);
            process.exit(1);
          });
          EOF

      - name: Commit classifications
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add incidents/index.json
          git commit -m "chore: auto-classify ${{ steps.check_unclassified.outputs.count }} incidents [skip ci]

          Automatically classified incidents using AI analysis.

          ðŸ¤– Classified with Claude Code"
          git push
