name: Incident-Classification

on:
  push:
    branches:
      - main
      - feature/incident-classification
    paths:
      - "incidents/index.json"

jobs:
  check-and-classify:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check for unclassified incidents
        id: check_unclassified
        run: |
          # Check if there are incidents missing classification fields
          UNCLASSIFIED=$(node -e "
          const fs = require('fs');
          const incidents = JSON.parse(fs.readFileSync('incidents/index.json', 'utf-8'));
          const unclassified = incidents.filter(i =>
            !i.affectedComponents ||
            i.externalVendors === undefined ||
            !i.rootCause
          );
          console.log(unclassified.length);
          ")

          echo "count=$UNCLASSIFIED" >> $GITHUB_OUTPUT

          if [ "$UNCLASSIFIED" -gt 0 ]; then
            echo "Found $UNCLASSIFIED unclassified incidents"
            echo "needs_classification=true" >> $GITHUB_OUTPUT

            # List unclassified incidents
            node -e "
            const fs = require('fs');
            const incidents = JSON.parse(fs.readFileSync('incidents/index.json', 'utf-8'));
            const unclassified = incidents.filter(i =>
              !i.affectedComponents ||
              i.externalVendors === undefined ||
              !i.rootCause
            );
            console.log('\nUnclassified incidents:');
            unclassified.forEach(i => console.log('  - ' + i.code + ': ' + i.name));
            "
          else
            echo "All incidents are classified"
            echo "needs_classification=false" >> $GITHUB_OUTPUT
          fi

      - name: Create classification PR
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        run: |
          # Create a new branch for classification
          BRANCH_NAME="auto-classify-$(date +%s)"
          git checkout -b "$BRANCH_NAME"

          # Create a marker file to indicate classification is needed
          echo "${{ steps.check_unclassified.outputs.count }} incidents need classification" > .classification-needed
          git add .classification-needed

          # Commit and push
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "chore: trigger incident classification

          Found ${{ steps.check_unclassified.outputs.count }} incidents needing classification.

          @claude please classify the unclassified incidents in incidents/index.json using this taxonomy:

          ## Classification Taxonomy:

          ### 1. affectedComponents (array)
          - delivery, publishing, admin-api, forms, code-sync, rum, indexing, logging, dns, sidekick, media

          ### 2. externalVendors (array or null)
          - cloudflare, aws, fastly, github, microsoft, unpkg, zscaler, or null

          ### 3. rootCause (string)
          - third-party-outage, configuration-change, deployment-issue, resource-limits, credential-issue, dns-issue, network-issue, unknown

          Analyze each incident's name and message to determine the appropriate classifications."

          git push -u origin "$BRANCH_NAME"

          # Create PR
          gh pr create \
            --title "Auto-classify incidents" \
            --body "This PR was automatically created because ${{ steps.check_unclassified.outputs.count }} incidents are missing classification fields.

          @claude please classify all unclassified incidents in \`incidents/index.json\`.

          Use the following taxonomy:

          ## Classification Fields Required:

          ### 1. affectedComponents (array)
          Which systems were impacted:
          - **delivery** - Content/page delivery
          - **publishing** - Authoring/preview/publish operations
          - **admin-api** - Admin service
          - **forms** - Form processing
          - **code-sync** - GitHub integration/bot
          - **rum** - Real User Monitoring
          - **indexing** - Index updates
          - **logging** - Log collection
          - **dns** - DNS resolution
          - **sidekick** - Sidekick tool
          - **media** - Image/media delivery

          ### 2. externalVendors (array or null)
          Third-party services involved:
          - **cloudflare**, **aws**, **fastly**, **github**, **microsoft**, **unpkg**, **zscaler**, or **null**

          ### 3. rootCause (string)
          Primary cause:
          - **third-party-outage**, **configuration-change**, **deployment-issue**, **resource-limits**, **credential-issue**, **dns-issue**, **network-issue**, **unknown**

          Please analyze each incident's \`name\` and \`message\` fields to determine appropriate classifications." \
            --label "claude" \
            --base ${{ github.ref_name }}
        env:
          GH_TOKEN: ${{ github.token }}
