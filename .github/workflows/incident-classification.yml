name: Incident-Classification

on:
  push:
    branches:
      - main
    paths:
      - "incidents/index.json"

jobs:
  claude-classify-incident:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2  # Need 2 commits to see the diff

      - name: Check for unclassified incidents
        id: check_unclassified
        run: |
          # Check if there are incidents missing classification fields
          UNCLASSIFIED=$(node -e "
          const fs = require('fs');
          const incidents = JSON.parse(fs.readFileSync('incidents/index.json', 'utf-8'));
          const unclassified = incidents.filter(i =>
            !i.affectedComponents ||
            i.externalVendors === undefined ||
            !i.rootCause
          );
          console.log(unclassified.length);
          ")

          echo "count=$UNCLASSIFIED" >> $GITHUB_OUTPUT

          if [ "$UNCLASSIFIED" -gt 0 ]; then
            echo "Found $UNCLASSIFIED unclassified incidents"
            echo "needs_classification=true" >> $GITHUB_OUTPUT
          else
            echo "All incidents are classified"
            echo "needs_classification=false" >> $GITHUB_OUTPUT
          fi

      - name: Claude Incident Classification
        if: steps.check_unclassified.outputs.needs_classification == 'true'
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            The incidents/index.json file has been updated with new incidents that need classification.

            Your task: Classify any incidents that are missing the required taxonomy fields.

            ## Classification Taxonomy:

            Each incident MUST have these three fields:

            ### 1. affectedComponents (array)
            Which systems were impacted. Choose from:
            - **delivery** - Content/page delivery
            - **publishing** - Authoring/preview/publish operations
            - **admin-api** - Admin service
            - **forms** - Form processing
            - **code-sync** - GitHub integration/bot
            - **rum** - Real User Monitoring
            - **indexing** - Index updates
            - **logging** - Log collection
            - **dns** - DNS resolution
            - **sidekick** - Sidekick tool
            - **media** - Image/media delivery

            Multiple components can be selected if the incident affected multiple systems.

            ### 2. externalVendors (array or null)
            Which third-party services were involved. Choose from:
            - **cloudflare** - Including R2, Workers
            - **aws** - Including Lambda, CloudWatch, etc.
            - **fastly** - Including Image Optimizer
            - **github** - GitHub API or services
            - **microsoft** - Azure, SharePoint, OneDrive
            - **unpkg** - unpkg.com CDN
            - **zscaler** - zScaler proxy/security
            - **null** - If no external vendor was involved

            ### 3. rootCause (string)
            Primary cause category. Choose ONE from:
            - **third-party-outage** - External service disruption
            - **configuration-change** - Configuration error or misconfiguration
            - **deployment-issue** - Code deployment or release problem
            - **resource-limits** - Capacity, concurrency, or resource exhaustion
            - **credential-issue** - Authentication, authorization, or credential problems
            - **dns-issue** - DNS resolution or configuration problems
            - **network-issue** - Network connectivity or routing issues
            - **unknown** - Cause not identified or maintenance

            ## Instructions:

            1. Read incidents/index.json
            2. Find ALL incidents missing any of the three classification fields
            3. For each unclassified incident, analyze the "name" and "message" fields
            4. Add the appropriate classification fields based on your analysis
            5. Write the updated JSON back to incidents/index.json
            6. Commit the changes with message: "chore: classify incidents [skip ci]"

            Be thorough and precise in your classifications. Use the incident descriptions
            to make informed decisions about affected components, vendor involvement, and
            root causes.

          claude_args: |
            --allowedTools "Read,Write,Edit,Bash(git *)"
